// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: opaque_keys.sql

package querier

import (
	"context"
)

const createOpaqueKey = `-- name: CreateOpaqueKey :one
INSERT INTO opaque_keys (key) VALUES ($1) RETURNING id
`

func (q *Queries) CreateOpaqueKey(ctx context.Context, key []byte) (int64, error) {
	row := q.db.QueryRow(ctx, createOpaqueKey, key)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const deleteOpaqueKey = `-- name: DeleteOpaqueKey :exec
DELETE FROM opaque_keys WHERE id = $1
`

func (q *Queries) DeleteOpaqueKey(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, deleteOpaqueKey, id)
	return err
}

const getOpaqueKey = `-- name: GetOpaqueKey :one
SELECT key FROM opaque_keys WHERE id = $1
`

func (q *Queries) GetOpaqueKey(ctx context.Context, id int64) ([]byte, error) {
	row := q.db.QueryRow(ctx, getOpaqueKey, id)
	var key []byte
	err := row.Scan(&key)
	return key, err
}
