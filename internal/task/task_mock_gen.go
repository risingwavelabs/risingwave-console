// Code generated by MockGen. DO NOT EDIT.
// Source: internal/task/task.go
//
// Generated by this command:
//
//	mockgen -source=internal/task/task.go -destination=internal/task/task_mock_gen.go -package=task
//

// Package task is a generated GoMock package.
package task

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTaskStoreInterface is a mock of TaskStoreInterface interface.
type MockTaskStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTaskStoreInterfaceMockRecorder
	isgomock struct{}
}

// MockTaskStoreInterfaceMockRecorder is the mock recorder for MockTaskStoreInterface.
type MockTaskStoreInterfaceMockRecorder struct {
	mock *MockTaskStoreInterface
}

// NewMockTaskStoreInterface creates a new mock instance.
func NewMockTaskStoreInterface(ctrl *gomock.Controller) *MockTaskStoreInterface {
	mock := &MockTaskStoreInterface{ctrl: ctrl}
	mock.recorder = &MockTaskStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskStoreInterface) EXPECT() *MockTaskStoreInterfaceMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockTaskStoreInterface) CreateTask(ctx context.Context, params CreateTaskParams) (int32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", ctx, params)
	ret0, _ := ret[0].(int32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockTaskStoreInterfaceMockRecorder) CreateTask(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockTaskStoreInterface)(nil).CreateTask), ctx, params)
}
