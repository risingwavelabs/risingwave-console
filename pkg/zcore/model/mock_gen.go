// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/zcore/model/model.go
//
// Generated by this command:
//
//	mockgen -source pkg/zcore/model/model.go -destination pkg/zcore/model/mock_gen.go -package model
//

// Package model is a generated GoMock package.
package model

import (
	context "context"
	reflect "reflect"

	pgx "github.com/jackc/pgx/v5"
	querier "github.com/risingwavelabs/wavekit/pkg/zgen/querier"
	gomock "go.uber.org/mock/gomock"
)

// MockModelInterface is a mock of ModelInterface interface.
type MockModelInterface struct {
	ctrl     *gomock.Controller
	recorder *MockModelInterfaceMockRecorder
	isgomock struct{}
}

// MockModelInterfaceMockRecorder is the mock recorder for MockModelInterface.
type MockModelInterfaceMockRecorder struct {
	mock *MockModelInterface
}

// NewMockModelInterface creates a new mock instance.
func NewMockModelInterface(ctrl *gomock.Controller) *MockModelInterface {
	mock := &MockModelInterface{ctrl: ctrl}
	mock.recorder = &MockModelInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelInterface) EXPECT() *MockModelInterfaceMockRecorder {
	return m.recorder
}

// CreateAutoBackupConfig mocks base method.
func (m *MockModelInterface) CreateAutoBackupConfig(ctx context.Context, arg querier.CreateAutoBackupConfigParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAutoBackupConfig", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAutoBackupConfig indicates an expected call of CreateAutoBackupConfig.
func (mr *MockModelInterfaceMockRecorder) CreateAutoBackupConfig(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAutoBackupConfig", reflect.TypeOf((*MockModelInterface)(nil).CreateAutoBackupConfig), ctx, arg)
}

// CreateAutoDiagnosticsConfig mocks base method.
func (m *MockModelInterface) CreateAutoDiagnosticsConfig(ctx context.Context, arg querier.CreateAutoDiagnosticsConfigParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAutoDiagnosticsConfig", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAutoDiagnosticsConfig indicates an expected call of CreateAutoDiagnosticsConfig.
func (mr *MockModelInterfaceMockRecorder) CreateAutoDiagnosticsConfig(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAutoDiagnosticsConfig", reflect.TypeOf((*MockModelInterface)(nil).CreateAutoDiagnosticsConfig), ctx, arg)
}

// CreateCluster mocks base method.
func (m *MockModelInterface) CreateCluster(ctx context.Context, arg querier.CreateClusterParams) (*querier.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCluster", ctx, arg)
	ret0, _ := ret[0].(*querier.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCluster indicates an expected call of CreateCluster.
func (mr *MockModelInterfaceMockRecorder) CreateCluster(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCluster", reflect.TypeOf((*MockModelInterface)(nil).CreateCluster), ctx, arg)
}

// CreateClusterDiagnostic mocks base method.
func (m *MockModelInterface) CreateClusterDiagnostic(ctx context.Context, arg querier.CreateClusterDiagnosticParams) (*querier.ClusterDiagnostic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClusterDiagnostic", ctx, arg)
	ret0, _ := ret[0].(*querier.ClusterDiagnostic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateClusterDiagnostic indicates an expected call of CreateClusterDiagnostic.
func (mr *MockModelInterfaceMockRecorder) CreateClusterDiagnostic(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClusterDiagnostic", reflect.TypeOf((*MockModelInterface)(nil).CreateClusterDiagnostic), ctx, arg)
}

// CreateClusterSnapshot mocks base method.
func (m *MockModelInterface) CreateClusterSnapshot(ctx context.Context, arg querier.CreateClusterSnapshotParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClusterSnapshot", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateClusterSnapshot indicates an expected call of CreateClusterSnapshot.
func (mr *MockModelInterfaceMockRecorder) CreateClusterSnapshot(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClusterSnapshot", reflect.TypeOf((*MockModelInterface)(nil).CreateClusterSnapshot), ctx, arg)
}

// CreateDatabaseConnection mocks base method.
func (m *MockModelInterface) CreateDatabaseConnection(ctx context.Context, arg querier.CreateDatabaseConnectionParams) (*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDatabaseConnection", ctx, arg)
	ret0, _ := ret[0].(*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDatabaseConnection indicates an expected call of CreateDatabaseConnection.
func (mr *MockModelInterfaceMockRecorder) CreateDatabaseConnection(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDatabaseConnection", reflect.TypeOf((*MockModelInterface)(nil).CreateDatabaseConnection), ctx, arg)
}

// CreateMetricsStore mocks base method.
func (m *MockModelInterface) CreateMetricsStore(ctx context.Context, arg querier.CreateMetricsStoreParams) (*querier.MetricsStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMetricsStore", ctx, arg)
	ret0, _ := ret[0].(*querier.MetricsStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMetricsStore indicates an expected call of CreateMetricsStore.
func (mr *MockModelInterfaceMockRecorder) CreateMetricsStore(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMetricsStore", reflect.TypeOf((*MockModelInterface)(nil).CreateMetricsStore), ctx, arg)
}

// CreateOrgSettings mocks base method.
func (m *MockModelInterface) CreateOrgSettings(ctx context.Context, arg querier.CreateOrgSettingsParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrgSettings", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrgSettings indicates an expected call of CreateOrgSettings.
func (mr *MockModelInterfaceMockRecorder) CreateOrgSettings(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrgSettings", reflect.TypeOf((*MockModelInterface)(nil).CreateOrgSettings), ctx, arg)
}

// DeleteAllOrgDatabaseConnectionsByClusterID mocks base method.
func (m *MockModelInterface) DeleteAllOrgDatabaseConnectionsByClusterID(ctx context.Context, arg querier.DeleteAllOrgDatabaseConnectionsByClusterIDParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAllOrgDatabaseConnectionsByClusterID", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAllOrgDatabaseConnectionsByClusterID indicates an expected call of DeleteAllOrgDatabaseConnectionsByClusterID.
func (mr *MockModelInterfaceMockRecorder) DeleteAllOrgDatabaseConnectionsByClusterID(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAllOrgDatabaseConnectionsByClusterID", reflect.TypeOf((*MockModelInterface)(nil).DeleteAllOrgDatabaseConnectionsByClusterID), ctx, arg)
}

// DeleteClusterDiagnostic mocks base method.
func (m *MockModelInterface) DeleteClusterDiagnostic(ctx context.Context, id int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteClusterDiagnostic", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteClusterDiagnostic indicates an expected call of DeleteClusterDiagnostic.
func (mr *MockModelInterfaceMockRecorder) DeleteClusterDiagnostic(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteClusterDiagnostic", reflect.TypeOf((*MockModelInterface)(nil).DeleteClusterDiagnostic), ctx, id)
}

// DeleteClusterSnapshot mocks base method.
func (m *MockModelInterface) DeleteClusterSnapshot(ctx context.Context, arg querier.DeleteClusterSnapshotParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteClusterSnapshot", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteClusterSnapshot indicates an expected call of DeleteClusterSnapshot.
func (mr *MockModelInterfaceMockRecorder) DeleteClusterSnapshot(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteClusterSnapshot", reflect.TypeOf((*MockModelInterface)(nil).DeleteClusterSnapshot), ctx, arg)
}

// DeleteMetricsStore mocks base method.
func (m *MockModelInterface) DeleteMetricsStore(ctx context.Context, arg querier.DeleteMetricsStoreParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMetricsStore", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMetricsStore indicates an expected call of DeleteMetricsStore.
func (mr *MockModelInterfaceMockRecorder) DeleteMetricsStore(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMetricsStore", reflect.TypeOf((*MockModelInterface)(nil).DeleteMetricsStore), ctx, arg)
}

// DeleteOrgCluster mocks base method.
func (m *MockModelInterface) DeleteOrgCluster(ctx context.Context, arg querier.DeleteOrgClusterParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrgCluster", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrgCluster indicates an expected call of DeleteOrgCluster.
func (mr *MockModelInterfaceMockRecorder) DeleteOrgCluster(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrgCluster", reflect.TypeOf((*MockModelInterface)(nil).DeleteOrgCluster), ctx, arg)
}

// DeleteOrgDatabaseConnection mocks base method.
func (m *MockModelInterface) DeleteOrgDatabaseConnection(ctx context.Context, arg querier.DeleteOrgDatabaseConnectionParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrgDatabaseConnection", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrgDatabaseConnection indicates an expected call of DeleteOrgDatabaseConnection.
func (mr *MockModelInterfaceMockRecorder) DeleteOrgDatabaseConnection(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrgDatabaseConnection", reflect.TypeOf((*MockModelInterface)(nil).DeleteOrgDatabaseConnection), ctx, arg)
}

// GetAllOrgDatabseConnectionsByClusterID mocks base method.
func (m *MockModelInterface) GetAllOrgDatabseConnectionsByClusterID(ctx context.Context, arg querier.GetAllOrgDatabseConnectionsByClusterIDParams) ([]*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllOrgDatabseConnectionsByClusterID", ctx, arg)
	ret0, _ := ret[0].([]*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllOrgDatabseConnectionsByClusterID indicates an expected call of GetAllOrgDatabseConnectionsByClusterID.
func (mr *MockModelInterfaceMockRecorder) GetAllOrgDatabseConnectionsByClusterID(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllOrgDatabseConnectionsByClusterID", reflect.TypeOf((*MockModelInterface)(nil).GetAllOrgDatabseConnectionsByClusterID), ctx, arg)
}

// GetAutoBackupConfig mocks base method.
func (m *MockModelInterface) GetAutoBackupConfig(ctx context.Context, clusterID int32) (*querier.AutoBackupConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAutoBackupConfig", ctx, clusterID)
	ret0, _ := ret[0].(*querier.AutoBackupConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAutoBackupConfig indicates an expected call of GetAutoBackupConfig.
func (mr *MockModelInterfaceMockRecorder) GetAutoBackupConfig(ctx, clusterID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAutoBackupConfig", reflect.TypeOf((*MockModelInterface)(nil).GetAutoBackupConfig), ctx, clusterID)
}

// GetAutoDiagnosticsConfig mocks base method.
func (m *MockModelInterface) GetAutoDiagnosticsConfig(ctx context.Context, clusterID int32) (*querier.AutoDiagnosticsConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAutoDiagnosticsConfig", ctx, clusterID)
	ret0, _ := ret[0].(*querier.AutoDiagnosticsConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAutoDiagnosticsConfig indicates an expected call of GetAutoDiagnosticsConfig.
func (mr *MockModelInterfaceMockRecorder) GetAutoDiagnosticsConfig(ctx, clusterID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAutoDiagnosticsConfig", reflect.TypeOf((*MockModelInterface)(nil).GetAutoDiagnosticsConfig), ctx, clusterID)
}

// GetClusterByID mocks base method.
func (m *MockModelInterface) GetClusterByID(ctx context.Context, id int32) (*querier.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterByID", ctx, id)
	ret0, _ := ret[0].(*querier.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterByID indicates an expected call of GetClusterByID.
func (mr *MockModelInterfaceMockRecorder) GetClusterByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterByID", reflect.TypeOf((*MockModelInterface)(nil).GetClusterByID), ctx, id)
}

// GetClusterDiagnostic mocks base method.
func (m *MockModelInterface) GetClusterDiagnostic(ctx context.Context, id int32) (*querier.ClusterDiagnostic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterDiagnostic", ctx, id)
	ret0, _ := ret[0].(*querier.ClusterDiagnostic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterDiagnostic indicates an expected call of GetClusterDiagnostic.
func (mr *MockModelInterfaceMockRecorder) GetClusterDiagnostic(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterDiagnostic", reflect.TypeOf((*MockModelInterface)(nil).GetClusterDiagnostic), ctx, id)
}

// GetDatabaseConnectionByID mocks base method.
func (m *MockModelInterface) GetDatabaseConnectionByID(ctx context.Context, id int32) (*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatabaseConnectionByID", ctx, id)
	ret0, _ := ret[0].(*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDatabaseConnectionByID indicates an expected call of GetDatabaseConnectionByID.
func (mr *MockModelInterfaceMockRecorder) GetDatabaseConnectionByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatabaseConnectionByID", reflect.TypeOf((*MockModelInterface)(nil).GetDatabaseConnectionByID), ctx, id)
}

// GetMetricsStore mocks base method.
func (m *MockModelInterface) GetMetricsStore(ctx context.Context, id int32) (*querier.MetricsStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetricsStore", ctx, id)
	ret0, _ := ret[0].(*querier.MetricsStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetricsStore indicates an expected call of GetMetricsStore.
func (mr *MockModelInterfaceMockRecorder) GetMetricsStore(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetricsStore", reflect.TypeOf((*MockModelInterface)(nil).GetMetricsStore), ctx, id)
}

// GetMetricsStoreByIDAndOrgID mocks base method.
func (m *MockModelInterface) GetMetricsStoreByIDAndOrgID(ctx context.Context, arg querier.GetMetricsStoreByIDAndOrgIDParams) (*querier.MetricsStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetricsStoreByIDAndOrgID", ctx, arg)
	ret0, _ := ret[0].(*querier.MetricsStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetricsStoreByIDAndOrgID indicates an expected call of GetMetricsStoreByIDAndOrgID.
func (mr *MockModelInterfaceMockRecorder) GetMetricsStoreByIDAndOrgID(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetricsStoreByIDAndOrgID", reflect.TypeOf((*MockModelInterface)(nil).GetMetricsStoreByIDAndOrgID), ctx, arg)
}

// GetOrgCluster mocks base method.
func (m *MockModelInterface) GetOrgCluster(ctx context.Context, arg querier.GetOrgClusterParams) (*querier.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgCluster", ctx, arg)
	ret0, _ := ret[0].(*querier.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgCluster indicates an expected call of GetOrgCluster.
func (mr *MockModelInterfaceMockRecorder) GetOrgCluster(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgCluster", reflect.TypeOf((*MockModelInterface)(nil).GetOrgCluster), ctx, arg)
}

// GetOrgDatabaseByID mocks base method.
func (m *MockModelInterface) GetOrgDatabaseByID(ctx context.Context, arg querier.GetOrgDatabaseByIDParams) (*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgDatabaseByID", ctx, arg)
	ret0, _ := ret[0].(*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgDatabaseByID indicates an expected call of GetOrgDatabaseByID.
func (mr *MockModelInterfaceMockRecorder) GetOrgDatabaseByID(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgDatabaseByID", reflect.TypeOf((*MockModelInterface)(nil).GetOrgDatabaseByID), ctx, arg)
}

// GetOrgDatabaseConnection mocks base method.
func (m *MockModelInterface) GetOrgDatabaseConnection(ctx context.Context, arg querier.GetOrgDatabaseConnectionParams) (*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgDatabaseConnection", ctx, arg)
	ret0, _ := ret[0].(*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgDatabaseConnection indicates an expected call of GetOrgDatabaseConnection.
func (mr *MockModelInterfaceMockRecorder) GetOrgDatabaseConnection(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgDatabaseConnection", reflect.TypeOf((*MockModelInterface)(nil).GetOrgDatabaseConnection), ctx, arg)
}

// GetOrgSettings mocks base method.
func (m *MockModelInterface) GetOrgSettings(ctx context.Context, orgID int32) (*querier.OrgSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgSettings", ctx, orgID)
	ret0, _ := ret[0].(*querier.OrgSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgSettings indicates an expected call of GetOrgSettings.
func (mr *MockModelInterfaceMockRecorder) GetOrgSettings(ctx, orgID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgSettings", reflect.TypeOf((*MockModelInterface)(nil).GetOrgSettings), ctx, orgID)
}

// InTransaction mocks base method.
func (m *MockModelInterface) InTransaction() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InTransaction")
	ret0, _ := ret[0].(bool)
	return ret0
}

// InTransaction indicates an expected call of InTransaction.
func (mr *MockModelInterfaceMockRecorder) InTransaction() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InTransaction", reflect.TypeOf((*MockModelInterface)(nil).InTransaction))
}

// InitCluster mocks base method.
func (m *MockModelInterface) InitCluster(ctx context.Context, arg querier.InitClusterParams) (*querier.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitCluster", ctx, arg)
	ret0, _ := ret[0].(*querier.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitCluster indicates an expected call of InitCluster.
func (mr *MockModelInterfaceMockRecorder) InitCluster(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitCluster", reflect.TypeOf((*MockModelInterface)(nil).InitCluster), ctx, arg)
}

// InitDatabaseConnection mocks base method.
func (m *MockModelInterface) InitDatabaseConnection(ctx context.Context, arg querier.InitDatabaseConnectionParams) (*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitDatabaseConnection", ctx, arg)
	ret0, _ := ret[0].(*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitDatabaseConnection indicates an expected call of InitDatabaseConnection.
func (mr *MockModelInterfaceMockRecorder) InitDatabaseConnection(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitDatabaseConnection", reflect.TypeOf((*MockModelInterface)(nil).InitDatabaseConnection), ctx, arg)
}

// InitMetricsStore mocks base method.
func (m *MockModelInterface) InitMetricsStore(ctx context.Context, arg querier.InitMetricsStoreParams) (*querier.MetricsStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitMetricsStore", ctx, arg)
	ret0, _ := ret[0].(*querier.MetricsStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitMetricsStore indicates an expected call of InitMetricsStore.
func (mr *MockModelInterfaceMockRecorder) InitMetricsStore(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitMetricsStore", reflect.TypeOf((*MockModelInterface)(nil).InitMetricsStore), ctx, arg)
}

// ListClusterDiagnostics mocks base method.
func (m *MockModelInterface) ListClusterDiagnostics(ctx context.Context, clusterID int32) ([]*querier.ListClusterDiagnosticsRow, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListClusterDiagnostics", ctx, clusterID)
	ret0, _ := ret[0].([]*querier.ListClusterDiagnosticsRow)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListClusterDiagnostics indicates an expected call of ListClusterDiagnostics.
func (mr *MockModelInterfaceMockRecorder) ListClusterDiagnostics(ctx, clusterID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListClusterDiagnostics", reflect.TypeOf((*MockModelInterface)(nil).ListClusterDiagnostics), ctx, clusterID)
}

// ListClusterSnapshots mocks base method.
func (m *MockModelInterface) ListClusterSnapshots(ctx context.Context, clusterID int32) ([]*querier.ClusterSnapshot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListClusterSnapshots", ctx, clusterID)
	ret0, _ := ret[0].([]*querier.ClusterSnapshot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListClusterSnapshots indicates an expected call of ListClusterSnapshots.
func (mr *MockModelInterfaceMockRecorder) ListClusterSnapshots(ctx, clusterID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListClusterSnapshots", reflect.TypeOf((*MockModelInterface)(nil).ListClusterSnapshots), ctx, clusterID)
}

// ListClustersByMetricsStoreID mocks base method.
func (m *MockModelInterface) ListClustersByMetricsStoreID(ctx context.Context, metricsStoreID *int32) ([]*querier.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListClustersByMetricsStoreID", ctx, metricsStoreID)
	ret0, _ := ret[0].([]*querier.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListClustersByMetricsStoreID indicates an expected call of ListClustersByMetricsStoreID.
func (mr *MockModelInterfaceMockRecorder) ListClustersByMetricsStoreID(ctx, metricsStoreID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListClustersByMetricsStoreID", reflect.TypeOf((*MockModelInterface)(nil).ListClustersByMetricsStoreID), ctx, metricsStoreID)
}

// ListMetricsStoresByOrgID mocks base method.
func (m *MockModelInterface) ListMetricsStoresByOrgID(ctx context.Context, orgID int32) ([]*querier.MetricsStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMetricsStoresByOrgID", ctx, orgID)
	ret0, _ := ret[0].([]*querier.MetricsStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMetricsStoresByOrgID indicates an expected call of ListMetricsStoresByOrgID.
func (mr *MockModelInterfaceMockRecorder) ListMetricsStoresByOrgID(ctx, orgID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMetricsStoresByOrgID", reflect.TypeOf((*MockModelInterface)(nil).ListMetricsStoresByOrgID), ctx, orgID)
}

// ListOrgClusters mocks base method.
func (m *MockModelInterface) ListOrgClusters(ctx context.Context, orgID int32) ([]*querier.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrgClusters", ctx, orgID)
	ret0, _ := ret[0].([]*querier.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOrgClusters indicates an expected call of ListOrgClusters.
func (mr *MockModelInterfaceMockRecorder) ListOrgClusters(ctx, orgID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrgClusters", reflect.TypeOf((*MockModelInterface)(nil).ListOrgClusters), ctx, orgID)
}

// ListOrgDatabaseConnections mocks base method.
func (m *MockModelInterface) ListOrgDatabaseConnections(ctx context.Context, orgID int32) ([]*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrgDatabaseConnections", ctx, orgID)
	ret0, _ := ret[0].([]*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOrgDatabaseConnections indicates an expected call of ListOrgDatabaseConnections.
func (mr *MockModelInterfaceMockRecorder) ListOrgDatabaseConnections(ctx, orgID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrgDatabaseConnections", reflect.TypeOf((*MockModelInterface)(nil).ListOrgDatabaseConnections), ctx, orgID)
}

// RemoveClusterMetricsStoreID mocks base method.
func (m *MockModelInterface) RemoveClusterMetricsStoreID(ctx context.Context, arg querier.RemoveClusterMetricsStoreIDParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveClusterMetricsStoreID", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveClusterMetricsStoreID indicates an expected call of RemoveClusterMetricsStoreID.
func (mr *MockModelInterfaceMockRecorder) RemoveClusterMetricsStoreID(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveClusterMetricsStoreID", reflect.TypeOf((*MockModelInterface)(nil).RemoveClusterMetricsStoreID), ctx, arg)
}

// RunTransaction mocks base method.
func (m *MockModelInterface) RunTransaction(ctx context.Context, f func(ModelInterface) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunTransaction", ctx, f)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunTransaction indicates an expected call of RunTransaction.
func (mr *MockModelInterfaceMockRecorder) RunTransaction(ctx, f any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunTransaction", reflect.TypeOf((*MockModelInterface)(nil).RunTransaction), ctx, f)
}

// RunTransactionWithTx mocks base method.
func (m *MockModelInterface) RunTransactionWithTx(ctx context.Context, f func(pgx.Tx, ModelInterface) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunTransactionWithTx", ctx, f)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunTransactionWithTx indicates an expected call of RunTransactionWithTx.
func (mr *MockModelInterfaceMockRecorder) RunTransactionWithTx(ctx, f any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunTransactionWithTx", reflect.TypeOf((*MockModelInterface)(nil).RunTransactionWithTx), ctx, f)
}

// SpawnWithTx mocks base method.
func (m *MockModelInterface) SpawnWithTx(tx pgx.Tx) ModelInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SpawnWithTx", tx)
	ret0, _ := ret[0].(ModelInterface)
	return ret0
}

// SpawnWithTx indicates an expected call of SpawnWithTx.
func (mr *MockModelInterfaceMockRecorder) SpawnWithTx(tx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SpawnWithTx", reflect.TypeOf((*MockModelInterface)(nil).SpawnWithTx), tx)
}

// UpdateAutoBackupConfig mocks base method.
func (m *MockModelInterface) UpdateAutoBackupConfig(ctx context.Context, arg querier.UpdateAutoBackupConfigParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAutoBackupConfig", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAutoBackupConfig indicates an expected call of UpdateAutoBackupConfig.
func (mr *MockModelInterfaceMockRecorder) UpdateAutoBackupConfig(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAutoBackupConfig", reflect.TypeOf((*MockModelInterface)(nil).UpdateAutoBackupConfig), ctx, arg)
}

// UpdateAutoDiagnosticsConfig mocks base method.
func (m *MockModelInterface) UpdateAutoDiagnosticsConfig(ctx context.Context, arg querier.UpdateAutoDiagnosticsConfigParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAutoDiagnosticsConfig", ctx, arg)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAutoDiagnosticsConfig indicates an expected call of UpdateAutoDiagnosticsConfig.
func (mr *MockModelInterfaceMockRecorder) UpdateAutoDiagnosticsConfig(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAutoDiagnosticsConfig", reflect.TypeOf((*MockModelInterface)(nil).UpdateAutoDiagnosticsConfig), ctx, arg)
}

// UpdateMetricsStore mocks base method.
func (m *MockModelInterface) UpdateMetricsStore(ctx context.Context, arg querier.UpdateMetricsStoreParams) (*querier.MetricsStore, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetricsStore", ctx, arg)
	ret0, _ := ret[0].(*querier.MetricsStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateMetricsStore indicates an expected call of UpdateMetricsStore.
func (mr *MockModelInterfaceMockRecorder) UpdateMetricsStore(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetricsStore", reflect.TypeOf((*MockModelInterface)(nil).UpdateMetricsStore), ctx, arg)
}

// UpdateOrgCluster mocks base method.
func (m *MockModelInterface) UpdateOrgCluster(ctx context.Context, arg querier.UpdateOrgClusterParams) (*querier.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrgCluster", ctx, arg)
	ret0, _ := ret[0].(*querier.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateOrgCluster indicates an expected call of UpdateOrgCluster.
func (mr *MockModelInterfaceMockRecorder) UpdateOrgCluster(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrgCluster", reflect.TypeOf((*MockModelInterface)(nil).UpdateOrgCluster), ctx, arg)
}

// UpdateOrgDatabaseConnection mocks base method.
func (m *MockModelInterface) UpdateOrgDatabaseConnection(ctx context.Context, arg querier.UpdateOrgDatabaseConnectionParams) (*querier.DatabaseConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrgDatabaseConnection", ctx, arg)
	ret0, _ := ret[0].(*querier.DatabaseConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateOrgDatabaseConnection indicates an expected call of UpdateOrgDatabaseConnection.
func (mr *MockModelInterfaceMockRecorder) UpdateOrgDatabaseConnection(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrgDatabaseConnection", reflect.TypeOf((*MockModelInterface)(nil).UpdateOrgDatabaseConnection), ctx, arg)
}
